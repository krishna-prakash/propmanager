type Landlord {
      id: ID!
      fullName: String!
      email: String!
      password: String
      mobile: Int
      occupation: String
      address1: String
      address2: String
      postcode: String!
      country: String!
      agent: Agent
}

type Agent {
      id: ID!
      businessService: String
      title: String
      firstName: String!
      lastName: String
      displayName: String
      email: String!
      password: String
      mobile: Int
      fax: Int
      address1: String
      address2: String
      postcode: String!
      country: String!
      website: String
      clients: [Landlord!]
}

type Property {
      id: ID!
      displayname: String
      address1: String!
      address2: String
      postcode: String!
      city: String!
      country: String!
      percentageofownership: Int
      status: String!
      purchaseprice: Int
      currentprice: Int
      currency: String
      tenants: [Tenant]
      landlords: [Landlord]
}

type Tenant {
      id: ID!
      firstName: String!
      lastName: String
      email: String!
      homenumber: Int
      mobilenumber: Int
      property: Property
}

type Query {
      getLandlords: [Landlord!]
      getProperties: [Property!]
      getAgents: [Agent!]
      getLandlord(id: ID!): Landlord!
}

input SignupInfo {
      name: String!
      email: String!
      mobile: Int!
      password: String!
}

input LandlordInfo {
      fullName: String
      email: String
      password: String
      mobile: Int
      occupation: String
      address1: String
      address2: String
      postcode: String
      country: String
}

input PropertyInfo {
      displayname: String
      address1: String!
      address2: String
      postcode: String!
      city: String!
      country: String!
      percentageofownership: Int
      status: String!
      purchaseprice: Int
      currentprice: Int
      currency: String
}

type Mutation {
      createLandlord(userinfo: SignupInfo!): Landlord!
      createProperty(propinfo: PropertyInfo!): Property!
      createAgent(userinfo: SignupInfo!): Agent!
      updateLandlord(id: ID!, landlordInfo: LandlordInfo!): Landlord!
      assignAgentToLandlord(agentId: ID!, landlordId: ID!): Landlord!
}
